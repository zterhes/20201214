{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/zterhes/Desktop/Flow/React/20201214/20201214/src/pages/productModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nexport default _s(() => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(true);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: isOpen,\n    onHide: () => setIsOpen(true),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Modal heading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: \"Woohoo, you're reading this text in a modal!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: () => setIsOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}, \"mEi83NlPXQzy/XIDfTYWzOSvaHw=\");","map":{"version":3,"sources":["/home/zterhes/Desktop/Flow/React/20201214/20201214/src/pages/productModal.js"],"names":["React","useState","Button","Modal","isOpen","setIsOpen"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AAEA,kBAAe,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;AACA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEG,MAAb;AAAqB,IAAA,MAAM,EAAE,MAAMC,SAAS,CAAC,IAAD,CAA5C;AAAA,4BACE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD,CAAO,MAAP;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,KAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAfD","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nexport default () => {\n  const [isOpen, setIsOpen] = useState(true);\n  return (\n    <Modal show={isOpen} onHide={() => setIsOpen(true)}>\n      <Modal.Header closeButton>\n        <Modal.Title>Modal heading</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n      <Modal.Footer>\n        <Button variant='secondary' onClick={() => setIsOpen(false)}>\n      Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n;\n"]},"metadata":{},"sourceType":"module"}